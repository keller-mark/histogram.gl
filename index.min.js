!function(){"use strict";function e(e){return e?e==e?e:0:0===e?e:0}function r(r,t,n){return r=e(r),void 0===t?(t=r,r=0):t=e(t),function(e,r,t,n){for(var o=-1,a=Math.max(Math.ceil((r-e)/(t||1)),0),i=new Array(a);a--;)i[n?a:++o]=e,e+=t;return i}(r,t,n=void 0===n?r<t?1:-1:e(n),!1)}function t(e,r,t){var n=e.createShader(r);if(e.shaderSource(n,t),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS))return n;console.log(e.getShaderInfoLog(n)),e.deleteShader(n)}function n(e,n,o){return new Promise((function(a,i){var u=document.createElement("canvas");u.width=256,u.height=1;var l=u.getContext("webgl");["OES_texture_float","EXT_float_blend","EXT_color_buffer_float","WEBGL_color_buffer_float"].forEach((function(e){l.getExtension(e)||console.warn("histogram.gl did not find the ".concat(e," WebGL extension."))}));var c=Float32Array.from(r(n*o)),E=l.createTexture();l.bindTexture(l.TEXTURE_2D,E),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),l.texImage2D(l.TEXTURE_2D,0,l.RGBA,n,o,0,l.RGBA,l.UNSIGNED_BYTE,e);var d=t(l,l.VERTEX_SHADER,"\nattribute float pixelId;\n\nuniform vec2 u_resolution;\nuniform sampler2D u_texture;\nuniform vec4 u_colorMult;\n\nvoid main() {\n  // based on an id (0, 1, 2, 3 ...) compute the pixel x, y for the source image\n  vec2 pixel = vec2(mod(pixelId, u_resolution.x), floor(pixelId / u_resolution.x));\n\n  // compute corresponding uv center of that pixel\n  vec2 uv = (pixel + 0.5) / u_resolution;\n\n  // get the pixels but 0 out channels we don't want\n  vec4 color = texture2D(u_texture, uv) * u_colorMult;\n\n  // add up all the channels. Since 3 are zeroed out we'll get just one channel\n  float colorSum = color.r + color.g + color.b + color.a;\n\n  // set the position to be over a single pixel in the 256x1 destination texture\n  gl_Position = vec4((colorSum * 255.0 + 0.5) / 256.0 * 2.0 - 1.0, 0.5, 0, 1);\n\n  gl_PointSize = 1.0;\n}\n"),f=t(l,l.FRAGMENT_SHADER,"\nprecision highp float;\n\nvoid main() {\n  gl_FragColor = vec4(1);\n}\n"),m=function(e,r,t){var n=e.createProgram();if(e.attachShader(n,r),e.attachShader(n,t),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS))return n;console.log(e.getProgramInfoLog(n)),e.deleteProgram(n)}(l,d,f),T=l.createBuffer();l.bindBuffer(l.ARRAY_BUFFER,T),l.bufferData(l.ARRAY_BUFFER,c,l.STATIC_DRAW);var h=l.createTexture();l.bindTexture(l.TEXTURE_2D,h),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),l.texImage2D(l.TEXTURE_2D,0,l.RGBA,256,1,0,l.RGBA,l.FLOAT,null);var g=l.createFramebuffer();l.bindFramebuffer(l.FRAMEBUFFER,g);var s=l.COLOR_ATTACHMENT0;l.framebufferTexture2D(l.FRAMEBUFFER,s,l.TEXTURE_2D,h,0),l.checkFramebufferStatus(l.FRAMEBUFFER)!==l.FRAMEBUFFER_COMPLETE&&i(new Error("can't render to floating point texture")),l.blendEquation(l.FUNC_ADD),l.blendFunc(l.ONE,l.ONE),l.clearColor(0,0,0,0),l.disable(l.DEPTH_TEST),l.enable(l.BLEND),l.useProgram(m);var _=l.getAttribLocation(m,"pixelId");l.enableVertexAttribArray(_),l.vertexAttribPointer(_,1,l.FLOAT,!1,0,0),l.bindFramebuffer(l.FRAMEBUFFER,g),l.viewport(0,0,256,1),l.clear(l.COLOR_BUFFER_BIT);for(var R=0,v=0;v<4;++v){l.colorMask(0===v,1===v,2===v,3===v);var A=l.getUniformLocation(m,"u_resolution");l.uniform2fv(A,[n,o]);var b=l.getUniformLocation(m,"u_colorMult");l.uniform4fv(b,[0===v?1:0,1===v?1:0,2===v?1:0,3===v?1:0]);var x=l.getUniformLocation(m,"u_texture");l.activeTexture(l.TEXTURE0+R),l.bindTexture(l.TEXTURE_2D,E),l.uniform1i(x,R++),l.drawArrays(l.POINTS,0,c.length),l.flush()}var p=new Float32Array(1024);l.readPixels(0,0,256,1,l.RGBA,l.FLOAT,p),a(p)}))}function o(e){return function(e){if(Array.isArray(e))return a(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||function(e,r){if(!e)return;if("string"==typeof e)return a(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return a(e,r)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}var i="https://gist.githubusercontent.com/mbostock/9511ae067889eefa5537eedcbbf87dab/raw/944b6e5fe8dd535d6381b93d88bf4a854dac53d4/mona-lisa.jpg";function u(e){for(var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=t?new Float32Array(e.length/4):new Uint8Array(e.length/4),o=0;o<n.length;o++)n[o]=e[4*o+r];return n}new Promise((function(e,r){var t=new Image;t.onload=function(){return e(t)},t.onerror=r,t.crossOrigin="anonymous",t.src=i})).then((function(e){console.log(e);var r=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.naturalWidth,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.naturalHeight,n=document.createElement("canvas");n.width=r,n.height=t;var o=n.getContext("2d");o.drawImage(e,0,0,r,t);var a=o.getImageData(0,0,r,t).data;return a}(e);u(r,0);return n(r,e.naturalWidth,e.naturalHeight)})).then((function(e){console.log("Histogram Data"),console.log(e);var r=document.createElement("img");r.crossOrigin=!0,r.src=i,r.width=200,document.querySelector("#root").appendChild(r);var t=document.createElement("h2");t.innerHTML="histogram.gl result",document.querySelector("#root").appendChild(t);var n=document.createElement("canvas");document.querySelector("#root").appendChild(n),n.width=400,n.height=200;var a=n.getContext("2d");a.globalAlpha=.4;["red","green","blue"].forEach((function(r,t){var i=Array.from(u(e,t,!0)),l=Math.max.apply(Math,o(i));i.forEach((function(e,t){var o=e/l*n.height,i=t/256*n.width;a.beginPath(),a.rect(i,n.height-o,1/256*n.width,n.height),a.fillStyle=r,a.fill()}))}));var l=document.createElement("h2");l.innerHTML="ground truth",document.querySelector("#root").appendChild(l);var c=document.createElement("img");c.crossOrigin=!0,c.src="https://raw.githubusercontent.com/keller-mark/histogram.gl/master/screenshot.png",document.querySelector("#root").appendChild(c)}))}();
//# sourceMappingURL=index.min.js.map
