!function(){"use strict";var e={vs:"\n    attribute float a_pixel_id;\n    \n    uniform vec2 u_resolution;\n    uniform sampler2D u_texture;\n    uniform vec4 u_color_mult;\n    \n    void main() {\n        // Compute the pixel (x, y) for the source image based on a pixel index.\n        vec2 pixel = vec2(mod(a_pixel_id, u_resolution.x), floor(a_pixel_id / u_resolution.x));\n        \n        // Compute center of the pixel.\n        vec2 uv = (pixel + 0.5) / u_resolution;\n        \n        // Get the color but zero out 3 of the 4 channels.\n        vec4 color = texture2D(u_texture, uv) * u_color_mult;\n        \n        // Add the channels.\n        float color_sum = color.r + color.g + color.b + color.a;\n        \n        // Set the position to somewhere in the 256x1 target texture.\n        gl_Position = vec4((color_sum * 255.0 + 0.5) / 256.0 * 2.0 - 1.0, 0.5, 0, 1);\n        gl_PointSize = 1.0;\n    }\n    ",fs:"\n    precision highp float;\n    \n    void main() {\n        gl_FragColor = vec4(1);\n    }\n    "},r={vs:"\n    attribute float a_pixel_id;\n    \n    uniform vec2 u_resolution;\n    uniform sampler2D u_texture;\n    \n    void main() {\n        // Compute the pixel (x, y) for the source image based on a pixel index.\n        vec2 pixel = vec2(mod(a_pixel_id, u_resolution.x), floor(a_pixel_id / u_resolution.x));\n        \n        // Compute center of the pixel.\n        vec2 uv = (pixel + 0.5) / u_resolution;\n        \n        // Get the color of interest.\n        float color = texture2D(u_texture, uv).r;\n        \n        // Set the position to somewhere in the 256x1 target texture.\n        gl_Position = vec4((color * 255.0 + 0.5) / 256.0 * 2.0 - 1.0, 0.5, 0, 1);\n        gl_PointSize = 1.0;\n    }\n    ",fs:"\n    precision highp float;\n    \n    void main() {\n        gl_FragColor = vec4(1);\n    }\n    "};function t(e){return e?e==e?e:0:0===e?e:0}function n(e,r,n){return e=t(e),void 0===r?(r=e,e=0):r=t(r),function(e,r,t,n){for(var o=-1,a=Math.max(Math.ceil((r-e)/(t||1)),0),i=new Array(a);a--;)i[n?a:++o]=e,e+=t;return i}(e,r,n=void 0===n?e<r?1:-1:t(n),!1)}function o(e,r,t){var n=e.createShader(r);if(e.shaderSource(n,t),e.compileShader(n),e.getShaderParameter(n,e.COMPILE_STATUS))return n;console.log(e.getShaderInfoLog(n)),e.deleteShader(n)}function a(t,a,i,l){return new Promise((function(u,c){var f=document.createElement("canvas");f.width=256,f.height=1;var m=f.getContext("webgl");["OES_texture_float","EXT_float_blend","EXT_color_buffer_float","WEBGL_color_buffer_float"].forEach((function(e){m.getExtension(e)||console.warn("histogram.gl did not find the ".concat(e," WebGL extension."))}));var E=Float32Array.from(n(a*i)),d=m.createTexture(),h=l?m.RGBA:m.LUMINANCE;m.bindTexture(m.TEXTURE_2D,d),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),m.texImage2D(m.TEXTURE_2D,0,h,a,i,0,h,m.UNSIGNED_BYTE,t);var s=l?e:r,_=o(m,m.VERTEX_SHADER,s.vs),g=o(m,m.FRAGMENT_SHADER,s.fs),T=function(e,r,t){var n=e.createProgram();if(e.attachShader(n,r),e.attachShader(n,t),e.linkProgram(n),e.getProgramParameter(n,e.LINK_STATUS))return n;console.log(e.getProgramInfoLog(n)),e.deleteProgram(n)}(m,_,g),v=m.createBuffer();m.bindBuffer(m.ARRAY_BUFFER,v),m.bufferData(m.ARRAY_BUFFER,E,m.STATIC_DRAW);var x=m.createTexture();m.bindTexture(m.TEXTURE_2D,x),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,m.CLAMP_TO_EDGE),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,m.NEAREST),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,m.NEAREST),m.texImage2D(m.TEXTURE_2D,0,m.RGBA,256,1,0,m.RGBA,m.FLOAT,null);var A=m.createFramebuffer();m.bindFramebuffer(m.FRAMEBUFFER,A);var p=m.COLOR_ATTACHMENT0;m.framebufferTexture2D(m.FRAMEBUFFER,p,m.TEXTURE_2D,x,0),m.checkFramebufferStatus(m.FRAMEBUFFER)!==m.FRAMEBUFFER_COMPLETE&&c(new Error("can't render to floating point texture")),m.blendEquation(m.FUNC_ADD),m.blendFunc(m.ONE,m.ONE),m.clearColor(0,0,0,0),m.disable(m.DEPTH_TEST),m.enable(m.BLEND),m.useProgram(T);var R=m.getAttribLocation(T,"a_pixel_id");m.enableVertexAttribArray(R),m.vertexAttribPointer(R,1,m.FLOAT,!1,0,0),m.bindFramebuffer(m.FRAMEBUFFER,A),m.viewport(0,0,256,1),m.clear(m.COLOR_BUFFER_BIT);for(var b=0,y=l?4:1,S=0;S<y;++S){m.colorMask(0===S,1===S,2===S,3===S);var U=m.getUniformLocation(T,"u_resolution");if(m.uniform2fv(U,[a,i]),l){var F=m.getUniformLocation(T,"u_color_mult");m.uniform4fv(F,[0===S?1:0,1===S?1:0,2===S?1:0,3===S?1:0])}var P=m.getUniformLocation(T,"u_texture");m.activeTexture(m.TEXTURE0+b),m.bindTexture(m.TEXTURE_2D,d),m.uniform1i(P,b++),m.drawArrays(m.POINTS,0,E.length),m.flush()}var D=new Float32Array(1024);m.readPixels(0,0,256,1,m.RGBA,m.FLOAT,D),l||(D=function(e){for(var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=new Float32Array(e.length/4),n=0;n<t.length;n++)t[n]=e[4*n+r];return t}(D,0)),u(D)}))}function i(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||u(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var t=[],n=!0,o=!1,a=void 0;try{for(var i,l=e[Symbol.iterator]();!(n=(i=l.next()).done)&&(t.push(i.value),!r||t.length!==r);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==l.return||l.return()}finally{if(o)throw a}}return t}(e,r)||u(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,r){if(e){if("string"==typeof e)return c(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?c(e,r):void 0}}function c(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}var f="https://gist.githubusercontent.com/mbostock/9511ae067889eefa5537eedcbbf87dab/raw/944b6e5fe8dd535d6381b93d88bf4a854dac53d4/mona-lisa.jpg";function m(e){for(var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,t=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=t?new Float32Array(e.length/4):new Uint8Array(e.length/4),o=0;o<n.length;o++)n[o]=e[4*o+r];return n}new Promise((function(e,r){var t=new Image;t.onload=function(){return e(t)},t.onerror=r,t.crossOrigin="anonymous",t.src=f})).then((function(e){console.log(e);var r,t,n,o=function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.naturalWidth,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.naturalHeight,n=document.createElement("canvas");n.width=r,n.height=t;var o=n.getContext("2d");o.drawImage(e,0,0,r,t);var a=o.getImageData(0,0,r,t).data;return Uint8Array.from(a)}(e),i=m(o,0),l=(r=o,t=e.naturalWidth,n=e.naturalHeight,a(r,t,n,!0)),u=function(e,r,t){return a(e,r,t,!1)}(i,e.naturalWidth,e.naturalHeight);return Promise.all([l,u])})).then((function(e){var r=l(e,2),t=r[0],n=r[1];console.log("createRgbaHistogram",t),console.log("createSingleChannelHistogram",n);var o=document.createElement("img");o.crossOrigin=!0,o.src=f,o.width=200,document.querySelector("#root").appendChild(o);var a=document.createElement("h2");a.innerHTML="histogram.gl results (left: RGB, right: single channel)",document.querySelector("#root").appendChild(a);var u=document.createElement("canvas");document.querySelector("#root").appendChild(u);u.width=1e3,u.height=200;var c=u.getContext("2d");c.globalAlpha=.4;["red","green","blue"].forEach((function(e,r){var n=Array.from(m(t,r,!0)),o=Math.max.apply(Math,i(n));n.forEach((function(r,t){var n=r/o*200,a=t/256*400;c.beginPath(),c.rect(a,200-n,1.5625,200),c.fillStyle=e,c.fill()}))}));var E=Array.from(n),d=Math.max.apply(Math,i(E));E.forEach((function(e,r){var t=e/d*200,n=r/256*400;c.beginPath(),c.rect(600+n,200-t,1.5625,200),c.fillStyle="red",c.fill()}));var h=document.createElement("h2");h.innerHTML="ground truth (macOS preview screenshot)",document.querySelector("#root").appendChild(h);var s=document.createElement("img");s.crossOrigin=!0,s.src="https://raw.githubusercontent.com/keller-mark/histogram.gl/master/screenshot.png",document.querySelector("#root").appendChild(s)}))}();
//# sourceMappingURL=index.min.js.map
